apply plugin: 'java'
apply plugin: 'maven-publish'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
    }
}

apply plugin: 'com.jfrog.bintray'

repositories {
    jcenter()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    // https://mvnrepository.com/artifact/com.googlecode.juniversalchardet/juniversalchardet
    compile group: 'com.googlecode.juniversalchardet', name: 'juniversalchardet', version: '1.0.3'
}

sourceCompatibility = "1.7"
targetCompatibility = "1.7"

task javadocJar(type: Jar) {
    baseName = "$project.name"
    version = ARTIFACT_VERSION
    classifier = 'docs'
    from javadoc
}

task sourcesJar(type: Jar) {
    baseName = "$project.name"
    version = ARTIFACT_VERSION
    from sourceSets.main.output
}

publishToMavenLocal.dependsOn build
bintrayUpload.dependsOn build

publishing {
    publications {
        driverPublish(MavenPublication) {
            groupId 'se.wetcat.qatja'
            artifactId "$project.name"
            version ARTIFACT_VERSION
            artifact sourcesJar
            artifact javadocJar
            // artifact("$buildDir/libs/$project.name-release.jar")
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.compile.allDependencies.each {
                    if (it.group != null && it.name != null &&
                            !"unspecified".equals(it.name) && it.version != null &&
                            !"unspecified".equals(it.version)) {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    publications = ['driverPublish']

    publish = true

    pkg {
        repo = 'Qatja'
        name = "$project.name"
        userOrg = 'wetcat'

        version {
            name = ARTIFACT_VERSION
            gpg {
                sign = true
            }
        }
    }
}
